/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editor;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author ankit
 */
public class TextEditor extends javax.swing.JFrame {

    /**
     * Creates new form TextEditor
     */
    
    String selectedText;
    
    public TextEditor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        button1 = new java.awt.Button();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        newfile = new javax.swing.JMenuItem();
        openfile = new javax.swing.JMenuItem();
        savefile = new javax.swing.JMenuItem();
        saveasfile = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        copytext = new javax.swing.JMenuItem();
        cuttext = new javax.swing.JMenuItem();
        pastetext = new javax.swing.JMenuItem();
        deletetext = new javax.swing.JMenuItem();
        selectalltext = new javax.swing.JMenuItem();
        search = new javax.swing.JMenu();
        findtext = new javax.swing.JMenuItem();
        replacetext = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Easy Editor");

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane1.setViewportView(textarea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        button1.setLabel("button1");

        file.setText("File");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        newfile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newfile.setText("New");
        newfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newfileActionPerformed(evt);
            }
        });
        file.add(newfile);

        openfile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openfile.setText("Open");
        openfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfileActionPerformed(evt);
            }
        });
        file.add(openfile);

        savefile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        savefile.setText("Save");
        savefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savefileActionPerformed(evt);
            }
        });
        file.add(savefile);

        saveasfile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        saveasfile.setText("Save As");
        saveasfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasfileActionPerformed(evt);
            }
        });
        file.add(saveasfile);

        jMenuBar1.add(file);

        edit.setText("Edit");

        copytext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copytext.setText("Copy");
        copytext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copytextActionPerformed(evt);
            }
        });
        edit.add(copytext);

        cuttext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cuttext.setText("Cut");
        cuttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuttextActionPerformed(evt);
            }
        });
        edit.add(cuttext);

        pastetext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pastetext.setText("Paste");
        pastetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastetextActionPerformed(evt);
            }
        });
        edit.add(pastetext);

        deletetext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        deletetext.setText("Delete");
        deletetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletetextActionPerformed(evt);
            }
        });
        edit.add(deletetext);

        selectalltext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        selectalltext.setText("Select All");
        selectalltext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectalltextActionPerformed(evt);
            }
        });
        edit.add(selectalltext);

        jMenuBar1.add(edit);

        search.setText("Search");

        findtext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        findtext.setText("Find");
        findtext.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                findtextItemStateChanged(evt);
            }
        });
        findtext.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                findtextComponentShown(evt);
            }
        });
        findtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findtextActionPerformed(evt);
            }
        });
        search.add(findtext);

        replacetext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        replacetext.setText("Replace");
        replacetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replacetextActionPerformed(evt);
            }
        });
        search.add(replacetext);

        jMenuBar1.add(search);

        help.setText("Help");

        about.setText("About");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        help.add(about);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newfileActionPerformed
        TextEditor obj = new TextEditor();
        JOptionPane.showMessageDialog(null,"Create New File"); 
        obj.setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_newfileActionPerformed

    private void openfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfileActionPerformed
          if(evt.getSource()==openfile)
          {
              JFileChooser fc = new JFileChooser();
              int i = fc.showOpenDialog(this);
              if(i==JFileChooser.APPROVE_OPTION)
              {
                  File f =fc.getSelectedFile();
                  String filepath = f.getPath();
                  try
                  {
                      BufferedReader br = new BufferedReader(new FileReader(filepath));
                      String s1="",s2="";
                      while((s1=br.readLine())!=null){
                          s2+=s1+"\n";
                      }
                      br.close();
                      textarea.setText(s2);
                  }
                  catch(FileNotFoundException ex)
                  {
              }   catch (IOException ex) {
                      Logger.getLogger(TextEditor.class.getName()).log(Level.SEVERE, null, ex);
                  }
          }
      }
        // TODO add your handling code here:
    }//GEN-LAST:event_openfileActionPerformed

    private void selectalltextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectalltextActionPerformed
        textarea.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_selectalltextActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileActionPerformed

    private void savefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savefileActionPerformed
        JFileChooser fc = new JFileChooser();
        int i = fc.showSaveDialog(this);
        if(i==JFileChooser.APPROVE_OPTION)
        {
            File f = fc.getSelectedFile();
            String filepath = f.getPath();
            //System.out.println(f.getName());
            try
            {
                FileWriter f1 = new FileWriter(filepath);
                f1.write(textarea.getText());
                f1.close();
               JOptionPane.showMessageDialog(null,f.getName()+" save successfully"); 
            } catch (IOException ex) {
                Logger.getLogger(TextEditor.class.getName()).log(Level.SEVERE, null, ex);
            }             
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_savefileActionPerformed

    private void saveasfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasfileActionPerformed
        JFileChooser fc = new JFileChooser();
        int i = fc.showSaveDialog(this);
        if(i==JFileChooser.APPROVE_OPTION)
        {
            File f = fc.getSelectedFile();
            String filepath = f.getPath();
            //System.out.println(f.getName());
            try
            {
                FileWriter f1 = new FileWriter(filepath);
                f1.append(textarea.getText());
                f1.close();
                JOptionPane.showMessageDialog(null,f.getName()+" save successfully"); 
            } catch (IOException ex) {
                Logger.getLogger(TextEditor.class.getName()).log(Level.SEVERE, null, ex);
            }             
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_saveasfileActionPerformed

    private void cuttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuttextActionPerformed
        selectedText=textarea.getSelectedText();
        String text = textarea.getText();
       String replaceString = text.replace(selectedText,"");
       textarea.setText(replaceString);
        // TODO add your handling code here:
    }//GEN-LAST:event_cuttextActionPerformed

    private void copytextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copytextActionPerformed
       selectedText = textarea.getSelectedText();
        // TODO add your handling code here:
    }//GEN-LAST:event_copytextActionPerformed

    private void pastetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastetextActionPerformed
        String text = textarea.getText();
        textarea.setText(text+selectedText);
        // TODO add your handling code here:
    }//GEN-LAST:event_pastetextActionPerformed

    private void deletetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletetextActionPerformed
        selectedText=textarea.getSelectedText();
        String text = textarea.getText();
       String replaceString = text.replace(selectedText,"");
       textarea.setText(replaceString);
       selectedText="";
        // TODO add your handling code here:
    }//GEN-LAST:event_deletetextActionPerformed

    private void findtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findtextActionPerformed
        int i =0;
        Highlighter h = textarea.getHighlighter();
        String findtext = JOptionPane.showInputDialog("Find what");
        String alltext = textarea.getText();
        Pattern pattern = Pattern.compile("\\b"+findtext+"\\b");
        Matcher matcher = pattern.matcher(alltext);
            while( matcher.find() )
                {
                int start = matcher.start();
                int end = matcher.end();
                try 
                {
                    i=1;
                    h.addHighlight(start, end, DefaultHighlighter.DefaultPainter);
                }
                catch (BadLocationException e1) {
				}
                }
            if(i!=1)
            {
               JOptionPane.showMessageDialog(null,"No Match Found"); 
            }
            
        // TODO add your handling code here:
    }//GEN-LAST:event_findtextActionPerformed

    private void findtextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_findtextItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_findtextItemStateChanged

    private void findtextComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_findtextComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_findtextComponentShown

    private void replacetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replacetextActionPerformed
        JTextField field1 = new JTextField();
        JTextField field2 = new JTextField();
        Object[] message = 
        {
            "Replace what:", field1,
            "Replace with:", field2,
        };
    int option = JOptionPane.showConfirmDialog(this, message, "Enter all your values", JOptionPane.OK_CANCEL_OPTION);
    if (option == JOptionPane.OK_OPTION)
    {
    String findText = field1.getText();
    String replaceText = field2.getText();
    String alltext = textarea.getText();
    String replace = alltext.replace(findText,replaceText);
    textarea.setText(replace);
    JOptionPane.showMessageDialog(null,"Replace successfully!"); 

}
        // TODO add your handling code here:
    }//GEN-LAST:event_replacetextActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        JOptionPane.showMessageDialog(null,"This is a simple Text Editor \n Which is developed to help the people to "
                + " create the text file \nand as well as other types of the file."
                + "\n\tThank You :)"
                + "\nby- Ankit Kumar"); 
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private java.awt.Button button1;
    private javax.swing.JMenuItem copytext;
    private javax.swing.JMenuItem cuttext;
    private javax.swing.JMenuItem deletetext;
    private javax.swing.JMenu edit;
    private javax.swing.JMenu file;
    private javax.swing.JMenuItem findtext;
    private javax.swing.JMenu help;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem newfile;
    private javax.swing.JMenuItem openfile;
    private javax.swing.JMenuItem pastetext;
    private javax.swing.JMenuItem replacetext;
    private javax.swing.JMenuItem saveasfile;
    private javax.swing.JMenuItem savefile;
    private javax.swing.JMenu search;
    private javax.swing.JMenuItem selectalltext;
    private javax.swing.JTextArea textarea;
    // End of variables declaration//GEN-END:variables

    private void setSelectionColor(Color BLUE) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
